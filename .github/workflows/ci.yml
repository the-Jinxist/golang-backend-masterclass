name: ci-test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  test:
    name: Test
    runs-on: ubuntu-latest

    #We need access to posgres in order to test, so we use an external service container that github actions provide
    services:
      postgres:
        image: postgres
        env:
          #Using the same postgres environmental variables used in the command
          POSTGRES_USER: root
          POSTGRES_PASSWORD: secret
          POSTGRES_DB: simple_bank
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432

    steps:

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2
    
    - name: Add system paths to 
      run: |
          echo "/usr/bin/" >> $GITHUB_PATH

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.17.5
      id: go

    # We forgot to install the golang-migrate cli tool. I completely forgot we did it way back in the tutorial. Omo
    # Found a link to the CLI binary that corresponds to the runner of this job, ubuntu, which is, linux-amd64.
    # We then moved the binary to the /usr/bin/ so we can run it
    #The we call which migrate to make sure everything was done successfully
    - name: Get Migrate CLI
      run: |
        curl -L https://github.com/golang-migrate/migrate/releases/download/v4.12.2/migrate.linux-amd64.tar.gz | tar xvz
        sudo mv migrate.linux-amd64 /usr/bin/migrate
        which migrate
       
    
    - name: We need to run migrations
      run: make migrateup 

    - name: Test
      run: make test