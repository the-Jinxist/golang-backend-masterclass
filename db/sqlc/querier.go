// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.15.0

package backend_masterclass

import (
	"context"

	"github.com/google/uuid"
)

type Querier interface {
	AddAccountBalance(ctx context.Context, arg AddAccountBalanceParams) (Accounts, error)
	BlockSession(ctx context.Context, arg BlockSessionParams) (Sessions, error)
	CreateAccount(ctx context.Context, arg CreateAccountParams) (Accounts, error)
	CreateEntry(ctx context.Context, arg CreateEntryParams) (Entries, error)
	CreateSession(ctx context.Context, arg CreateSessionParams) (Sessions, error)
	CreateTransfer(ctx context.Context, arg CreateTransferParams) (Transfers, error)
	CreateUser(ctx context.Context, arg CreateUserParams) (Users, error)
	DeleteAccount(ctx context.Context, id int64) error
	GetAccount(ctx context.Context, id int64) (Accounts, error)
	GetAccountForUpdate(ctx context.Context, id int64) (Accounts, error)
	GetEntry(ctx context.Context, id int64) (Entries, error)
	GetSession(ctx context.Context, id uuid.UUID) (Sessions, error)
	GetTransfer(ctx context.Context, id int64) (Transfers, error)
	GetTransfers(ctx context.Context, arg GetTransfersParams) ([]Transfers, error)
	GetUser(ctx context.Context, username string) (Users, error)
	ListAccounts(ctx context.Context, arg ListAccountsParams) ([]Accounts, error)
	ListEntries(ctx context.Context, arg ListEntriesParams) ([]Entries, error)
	UpdateAccount(ctx context.Context, arg UpdateAccountParams) (Accounts, error)
	// This method uses optional parameters with those weird CASE WHEN ELSE parameters
	// UPDATE users
	// set
	//   hashed_password = CASE
	//     WHEN @set_hashed_password::boolean = TRUE THEN @hashed_password
	//     ELSE hashed_password
	//   END,
	//   full_name = CASE
	//     WHEN @set_full_name::boolean = TRUE THEN @full_name
	//     ELSE full_name
	//   END,
	//   email = CASE
	//     WHEN @set_email::boolean = TRUE THEN @email
	//     ELSE email
	//   END
	// WHERE
	//   username = @username
	// RETURNING *;
	// The next method uses nullable paramters method to create the same updateUser method with
	UpdateUser(ctx context.Context, arg UpdateUserParams) (Users, error)
}

var _ Querier = (*Queries)(nil)
